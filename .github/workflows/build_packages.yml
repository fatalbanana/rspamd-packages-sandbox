name: Build packages

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
        description: 'The target OS/distro name (e.g., ubuntu-jammy, centos-7)'
      nightly:
        required: false
        type: string
        description: 'Set to any value to enable nightly build logic.'
      runner:
        required: true
        type: string
        description: 'The runner to use'

    outputs:
      revision:
        description: "Commit hash of rspamd"
        value: ${{ jobs.build.outputs.revision }}

jobs:
  build:
    name: 'build (${{ inputs.name }}/${{ inputs.runner.endsWith('-arm') && 'ARM64' || 'X64' }})'
    runs-on: '${{ inputs.runner }}'

    outputs:
      revision: ${{ steps.save_commit.outputs.revision }}

    steps:
      - name: Set OS-specific variables
        run: |
          if [[ "${{ inputs.name }}" == ubuntu-* || "${{ inputs.name }}" == debian-* ]]; then
            echo "PKG_TYPE=deb" >> "$GITHUB_ENV"
          elif [[ "${{ inputs.name }}" == centos-* ]] ; then
            echo "PKG_TYPE=rpm" >> "$GITHUB_ENV"
          else
            echo "Bad inputs.name: ${{ inputs.name }}"
            exit 1
          fi

      - name: Set version information for release
        if: ${{ ! inputs.nightly }}
        run: |
          # Note: In a reusable workflow called by another repo, github.ref_name might not be the tag.
          # The calling workflow should pass the correct ref/version as a new input if needed.
          # Assuming this workflow is called from the same repo where tags are created:
          export RSPAMD_VERSION=`echo ${{ github.ref_name }} | sed s/^v// | sed 's/\+.*//'`
          echo "RSPAMD_VERSION=${RSPAMD_VERSION}" >> "$GITHUB_ENV"
          export RELEASE_VERSION=`echo ${{ github.ref_name }} | cut -d'+' -f2`
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> "$GITHUB_ENV"

      - name: Check out rspamd
        uses: actions/checkout@v4
        with:
          repository: rspamd/rspamd
          path: rspamd
          ref: ${{ inputs.nightly && 'master' || env.RSPAMD_VERSION }}

      - name: Save commit hash
        id: save_commit
        run: |
          cd rspamd
          echo "revision=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Set version information for nightly
        if: ${{ inputs.nightly }}
        run: |
          export RSPAMD_VERSION=`date +%Y%m%d.%H.%M`
          echo "RSPAMD_VERSION=${RSPAMD_VERSION}" >> "$GITHUB_ENV"
          export RELEASE_VERSION=`cd rspamd && git rev-parse --short HEAD`
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> "$GITHUB_ENV"

      - name: Check out packpack
        uses: actions/checkout@v4
        with:
          repository: packpack/packpack
          path: packpack

      - name: Build packages
        run: |
          export ASAN=0
          export BUILDDIR=${{ github.workspace }}/build
          export DEBIAN=0
          export DOCKER_IMAGE=${{ inputs.name }}
          export DOCKER_REPO=ghcr.io/rspamd/rspamd-build-docker
          export LUAJIT=1
          export PRESERVE_ENVVARS=LUAJIT,ASAN
          # Use $RELEASE_VERSION and $RSPAMD_VERSION from $GITHUB_ENV
          export RELEASE=$RELEASE_VERSION
          export RPM=0
          export VERSION=$RSPAMD_VERSION

          mkdir $BUILDDIR
          echo "BUILDDIR=${BUILDDIR}" >> "$GITHUB_ENV"

          if [[ "${{ env.PKG_TYPE }}" == "deb" ]]; then
            export DEBIAN=1
          elif [[ "${{ env.PKG_TYPE }}" == "rpm" ]]; then
            export RPM=1
          else
            echo "Bad env.PKG_TYPE: ${{ env.PKG_TYPE }}"
            exit 1
          fi

          cd rspamd
          ../packpack/packpack
          if [ $RPM -eq 1 ]; then
            export ASAN=1
            ../packpack/packpack
          fi

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ runner.arch }}-${{ inputs.name }}
          path: |
            ${{ env.BUILDDIR }}/*.deb
            ${{ env.BUILDDIR }}/*.rpm
          retention-days: 1
          compression-level: 0
